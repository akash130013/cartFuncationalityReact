{"ast":null,"code":"import { INCREASE, DECREASE, CLEAR_CART, REMOVE, GET_TOTALS, GET_AMOUNTS } from \"../action\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case DECREASE:\n      let tempCartDec = [];\n\n      if (action.payload.amount == 1) {\n        tempCartDec = state.cart.filter(cartItem => cartItem.id != action.payload.id);\n      } else {\n        tempCartDec = state.cart.map(cartItem => {\n          if (cartItem.id == action.payload.id) {\n            cartItem = { ...cartItem,\n              amount: cartItem.amount - 1\n            };\n          }\n\n          return cartItem;\n        });\n      }\n\n      return { ...state,\n        cart: tempCartDec\n      };\n\n    case INCREASE:\n      let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id == action.payload.id) {\n          return { ...cartItem,\n            amount: cartItem.amount + 1\n          };\n        }\n\n        return cartItem;\n      });\n      return { ...state,\n        cart: tempCart\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case REMOVE:\n      return { ...state,\n        cart: state.cart.filter(cartItem => cartItem.id != action.payload.id)\n      };\n\n    case GET_TOTALS:\n      let {\n        total,\n        amount\n      } = state.cart.reduce((cartTotal, cartItem) => {\n        const {\n          price,\n          amount\n        } = cartItem;\n        cartTotal.amount += amount;\n        return cartTotal;\n      }, {\n        total: 0\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/redux_js/redux-cart/src/reducers/index.js"],"names":["INCREASE","DECREASE","CLEAR_CART","REMOVE","GET_TOTALS","GET_AMOUNTS","reducer","state","action","type","tempCartDec","payload","amount","cart","filter","cartItem","id","map","tempCart","total","reduce","cartTotal","price"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,WAA7D,QAAgF,WAAhF;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,QAAL;AAEI,UAAIS,WAAW,GAAG,EAAlB;;AACA,UAAIF,MAAM,CAACG,OAAP,CAAeC,MAAf,IAAyB,CAA7B,EAAgC;AAC5BF,QAAAA,WAAW,GAAGH,KAAK,CAACM,IAAN,CAAWC,MAAX,CACVC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACG,OAAP,CAAeK,EADhC,CAAd;AAGH,OAJD,MAIO;AAEHN,QAAAA,WAAW,GAAGH,KAAK,CAACM,IAAN,CAAWI,GAAX,CAAeF,QAAQ,IAAI;AACrC,cAAIA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACG,OAAP,CAAeK,EAAlC,EAAsC;AAClCD,YAAAA,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAeH,cAAAA,MAAM,EAAEG,QAAQ,CAACH,MAAT,GAAkB;AAAzC,aAAX;AAEH;;AACD,iBAAOG,QAAP;AACH,SANa,CAAd;AAOH;;AAED,aAAO,EAAE,GAAGR,KAAL;AAAYM,QAAAA,IAAI,EAAEH;AAAlB,OAAP;;AAEJ,SAAKV,QAAL;AAEI,UAAIkB,QAAQ,GAAGX,KAAK,CAACM,IAAN,CAAWI,GAAX,CAAeF,QAAQ,IAAI;AAEtC,YAAIA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACG,OAAP,CAAeK,EAAlC,EAAsC;AAClC,iBAAO,EAAE,GAAGD,QAAL;AAAeH,YAAAA,MAAM,EAAEG,QAAQ,CAACH,MAAT,GAAkB;AAAzC,WAAP;AACH;;AAED,eAAOG,QAAP;AACH,OAPc,CAAf;AASA,aAAO,EAAE,GAAGR,KAAL;AAAYM,QAAAA,IAAI,EAAEK;AAAlB,OAAP;;AAEJ,SAAKhB,UAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYM,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AAEJ,SAAKV,MAAL;AAEI,aAAO,EAAE,GAAGI,KAAL;AAAYM,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACG,OAAP,CAAeK,EAA5D;AAAlB,OAAP;;AAEJ,SAAKZ,UAAL;AAEA,UAAI;AAACe,QAAAA,KAAD;AAAOP,QAAAA;AAAP,UAAeL,KAAK,CAACM,IAAN,CAAWO,MAAX,CAAkB,CAACC,SAAD,EAAWN,QAAX,KAAuB;AAExD,cAAM;AAACO,UAAAA,KAAD;AAAOV,UAAAA;AAAP,YAAeG,QAArB;AACAM,QAAAA,SAAS,CAACT,MAAV,IAAkBA,MAAlB;AACA,eAAOS,SAAP;AAEH,OANkB,EAMjB;AACEF,QAAAA,KAAK,EAAC;AADR,OANiB,CAAnB;;AAUA;AACI,aAAOZ,KAAP;AAtDR;AA0DH;;AAGD,eAAeD,OAAf","sourcesContent":["import { INCREASE, DECREASE, CLEAR_CART, REMOVE, GET_TOTALS, GET_AMOUNTS } from \"../action\"\n\n\n\nfunction reducer(state, action) {\n\n    switch (action.type) {\n        case DECREASE:\n\n            let tempCartDec = [];\n            if (action.payload.amount == 1) {\n                tempCartDec = state.cart.filter(\n                    cartItem => cartItem.id != action.payload.id\n                )\n            } else {\n\n                tempCartDec = state.cart.map(cartItem => {\n                    if (cartItem.id == action.payload.id) {\n                        cartItem = { ...cartItem, amount: cartItem.amount - 1 }\n\n                    }\n                    return cartItem;\n                })\n            }\n\n            return { ...state, cart: tempCartDec }\n\n        case INCREASE:\n\n            let tempCart = state.cart.map(cartItem => {\n\n                if (cartItem.id == action.payload.id) {\n                    return { ...cartItem, amount: cartItem.amount + 1 }\n                }\n\n                return cartItem\n            });\n\n            return { ...state, cart: tempCart }\n\n        case CLEAR_CART:\n            return { ...state, cart: [] }\n\n        case REMOVE:\n\n            return { ...state, cart: state.cart.filter(cartItem => cartItem.id != action.payload.id) }\n\n        case GET_TOTALS:\n        \n        let {total,amount}=state.cart.reduce((cartTotal,cartItem) =>{\n\n            const {price,amount}=cartItem;\n            cartTotal.amount+=amount;\n            return cartTotal;\n\n        },{\n            total:0})\n\n\n        default:\n            return state;\n\n    }\n\n}\n\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}