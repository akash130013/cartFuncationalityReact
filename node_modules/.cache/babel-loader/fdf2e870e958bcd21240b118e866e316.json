{"ast":null,"code":"var _jsxFileName = \"/var/www/html/redux_js/redux-cart/src/components/CartContainer.js\";\nimport React from \"react\";\nimport CartItem from \"./CartItem\";\nimport { connect } from \"react-redux\";\nimport { CLEAR_CART, GET_TOTALS } from '../action';\n\nconst CartContainer = ({\n  cart = [],\n  total,\n  dispatch\n}) => {\n  React.useEffect(() => {\n    dispatch({\n      type: GET_TOTALS\n    });\n  });\n\n  if (cart.length === 0) {\n    return React.createElement(\"section\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"your bag\"), React.createElement(\"h4\", {\n      className: \"empty-cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"is currently empty\")));\n  }\n\n  return React.createElement(\"section\", {\n    className: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"your bag\")), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, cart.map(item => {\n    return React.createElement(CartItem, Object.assign({\n      key: item.id\n    }, item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  })), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cart-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"total \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"$\", total))), React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: () => dispatch({\n      type: CLEAR_CART\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"clear cart\")));\n};\n\nconst mapStateToProps = store => {\n  const {\n    cart,\n    total\n  } = store;\n  return {\n    cart,\n    total\n  };\n};\n\nexport default connect(mapStateToProps)(CartContainer);","map":{"version":3,"sources":["/var/www/html/redux_js/redux-cart/src/components/CartContainer.js"],"names":["React","CartItem","connect","CLEAR_CART","GET_TOTALS","CartContainer","cart","total","dispatch","useEffect","type","length","map","item","id","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAmBC,UAAnB,QAAoC,WAApC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAYC,EAAAA,KAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAEtDR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACD,GAFD;;AAKA,MAAIE,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuB;AACrB,WACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CAFF,CADF;AASD;;AACD,SACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,GAAL,CAASC,IAAI,IAAI;AAChB,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,OAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CANF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQN,KAAR,CADN,CADF,CAFF,EAOE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAE,MAAIC,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP;AAAN,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CAZF,CADF;AAwBD,CA1CD;;AA8CA,MAAMY,eAAe,GAAIC,KAAD,IAAS;AAE/B,QAAM;AAAEV,IAAAA,IAAF;AAAOC,IAAAA;AAAP,MAAcS,KAApB;AACA,SAAO;AAACV,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAP;AAED,CALD;;AAOA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAA0BV,aAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport CartItem from \"./CartItem\";\nimport {connect} from \"react-redux\"\nimport {CLEAR_CART,GET_TOTALS} from '../action'\n\nconst CartContainer = ({ cart = [],total,dispatch }) => {\n\n  React.useEffect(() => {\n    dispatch({ type: GET_TOTALS})\n  })\n\n\n  if (cart.length === 0) {\n    return (\n      <section className=\"cart\">\n        {/* cart header */}\n        <header>\n          <h2>your bag</h2>\n          <h4 className=\"empty-cart\">is currently empty</h4>\n        </header>\n      </section>\n    );\n  }\n  return (\n    <section className=\"cart\">\n      {/* cart header */}\n      <header>\n        <h2>your bag</h2>\n      </header>\n      {/* cart items */}\n      <article>\n        {cart.map(item => {\n          return <CartItem key={item.id} {...item} />;\n        })}\n      </article>\n      {/* cart footer */}\n      <footer>\n        <hr />\n        <div className=\"cart-total\">\n          <h4>\n          total <span>${total}</span>\n          </h4>\n        </div>\n        <button className=\"btn clear-btn\" onClick={()=>dispatch({type:CLEAR_CART})}>clear cart</button>\n      </footer>\n    </section>\n  );\n};\n\n\n\nconst mapStateToProps = (store)=>{\n \n  const { cart,total}=store;\n  return {cart,total};\n\n}\n\nexport default connect(mapStateToProps) (CartContainer);\n"]},"metadata":{},"sourceType":"module"}